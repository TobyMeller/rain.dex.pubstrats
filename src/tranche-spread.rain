tokens:
  polygon-dai:
    network: polygon
    address: 0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063
    decimals: 18
    symbol: DAI
  polygon-wmatic:
    network: polygon
    address: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
    decimals: 18
    symbol: WMATIC

orders:
  polygon-tranche-spread-order:
    network: polygon
    orderbook: polygon
    deployer: polygon
    inputs:
        - token: polygon-dai
          decimals: 18
          vault-id: 0x11
        - token: polygon-wmatic
          decimals: 18
          vault-id: 0x11
    outputs:
        - token: polygon-dai
          decimals: 18
          vault-id: 0x11
        - token: polygon-wmatic
          decimals: 18
          vault-id: 0x11
        
scenarios:
    polygon-experimental:
        network: polygon
        deployer: polygon
        orderbook: polygon
        runs: 1000
        bindings:
          distribution-token: 0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063
          reserve-token: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
          input-token: 0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063
          output-token: 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270
          input-token-decimals: 18
          output-token-decimals: 18
          order-hash: 11223344
          initial-tranche-space: 0
          tranche-space-snap-threshold: 1e12
          tranche-space-edge-guard-threshold: 2e17
          tranche-reserve-io-ratio-base: 33333333333333333333
          tranche-reserve-amount-base: 1000e18
          spread-ratio: 101e16
          get-tranche-space: '''get-test-tranche-space'
          set-tranche-space: '''set-test-tranche-space'
          tranche-reserve-amount-growth: '''tranche-reserve-amount-growth-constant'
          tranche-reserve-io-ratio-growth: '''tranche-reserve-io-ratio-linear'
          
          
charts:
    main-chart:
        scenario: polygon-experimental
        plots:
            tranche-space vs ratio:
                data:
                    x: 0.0
                    y: 0.6
                plot-type: line
            tranche-space vs amount:
                data:
                    x: 0.0
                    y: 0.5
                plot-type: line
---
#distribution-token !The token that is being distributed by the strat.
#reserve-token !The token used to buyback the distribution token.

#get-tranche-space !Binding to fetch the current tranche space.
#initial-tranche-space !The initial tranche space when the order is first deployed.
#set-tranche-space !Binding to set the current tranche space.
#test-tranche-space !Normalized current position in tranche space.
#tranche-space-key "tranche-space"
#init-key "init"

#get-real-tranche-space
  _: if(
    get(hash(order-hash init-key))
    get(hash(order-hash tranche-space-key))
    initial-tranche-space
  );

#set-real-tranche-space
  tranche-space:,
  :set(hash(order-hash init-key) 1),
  :set(hash(order-hash tranche-space-key) tranche-space);

#get-test-tranche-space
  _: int-mod(test-tranche-space 10e18);

#set-test-tranche-space
  tranche-space:;

#tranche-reserve-amount-growth !Binding to calculate the reserve amount of the current tranche.
#tranche-reserve-amount-base !Base tranche size in reserve token.
#tranche-reserve-amount-growth-constant
  _:,
  _: tranche-reserve-amount-base;

#tranche-reserve-io-ratio-growth !Binding to calculate the io ratio of the current tranche.
#tranche-reserve-io-ratio-base !Base tranche io ratio.
#tranche-reserve-io-ratio-linear
  tranche-space:,
  _: decimal18-mul(tranche-reserve-io-ratio-base decimal18-add(1e18 decimal18-floor(tranche-space)));

#calculate-tranche-reserve
  tranche-space: call<get-tranche-space>(),
  tranche-reserve-amount-total: call<tranche-reserve-amount-growth>(tranche-space),
  tranche-reserve-amount-left: decimal18-mul(decimal18-headroom(tranche-space) tranche-reserve-amount-total),
  tranche-reserve-io-ratio: call<tranche-reserve-io-ratio-growth>(tranche-space);

#spread-ratio !The ratio of the spread. 101e16 is 1% difference between distribution and buyback.
#calculate-spread
  reserve-amount
  reserve-io-ratio:,
  is-distribution: equal-to(output-token distribution-token),
  spread-io-ratio: if(is-distribution decimal18-div(spread-ratio reserve-io-ratio) reserve-io-ratio),
  spread-amount: if(is-distribution decimal18-div(reserve-amount spread-io-ratio) reserve-amount);

#calculate-io
  tranche-space _ tranche-reserve-amount-left
  tranche-reserve-io-ratio: call<'calculate-tranche-reserve>(),
  io-ratio output-amount: call<'calculate-spread>(tranche-reserve-amount-left tranche-reserve-io-ratio),
  /* repeat io-ratio so it's where ob expects it */
  _: io-ratio;

#tranche-space-snap-threshold !The threshold under which the tranche space after will snap to the closest unit. Should be significantly less than the spread as the snapped dust is not available as profit on the round trip.
#tranche-space-edge-guard-threshold !The tranche space after cannot be this close to an upper or lower tranche edge.
#handle-io
  tranche-space-before
  tranche-reserve-amount-total
  _
  tranche-reserve-io-ratio: call<'calculate-tranche-reserve>(),
  is-distribution: equal-to(output-token distribution-token),
  reserve-amount-diff: if(
    is-distribution
    decimal18-scale-18-dynamic(input-token-decimals context<3 4>())
    decimal18-scale-18-dynamic(output-token-decimals context<4 4>())),
  tranche-space-diff: decimal18-div(reserve-amount-diff tranche-reserve-amount-total),
  tranche-space-after: if(
    is-distribution
    decimal18-add(tranche-space-before tranche-space-diff)
    decimal18-saturating-sub(tranche-space-before tranche-space-diff)
  ),
  tranche-space-after-snapped: decimal18-snap-to-unit(tranche-space-snap-threshold tranche-space-after),
  :ensure(
    any(
      is-zero(decimal18-frac(tranche-space-after-snapped))
      every(
        greater-than-or-equal-to(decimal18-frac(tranche-space-after-snapped) tranche-space-edge-guard-threshold)
        greater-than-or-equal-to(decimal18-headroom(tranche-space-after-snapped) tranche-space-edge-guard-threshold)
      )
    )
    "Tranche threshold reached."
  ),
  :call<set-tranche-space>(tranche-space-after-snapped);