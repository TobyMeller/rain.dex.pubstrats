# This strategy will buy WFLR based on the price of the FTSO pair FLR/USD
#
# The strategy has a cooldown specified in seconds, e.g. 300 = 5 minutes.
# The strategy will not buy while the cooldown is active, so overall the
# strategy functions like a dollar cost averaging process.

tokens:
  eusdt:
    network: flare
    address: 0x96B41289D90444B8adD57e6F265DB5aE8651DF29
    decimals: 6
  wflr:
    network: flare
    address: 0x1D80c49BbBCd1C0911346656B529DF9E5c2F783d
    decimals: 18

orders:
  # vault-id is `openssl rand -hex 32`
  buy-wflr:
    inputs:
      - token: wflr
        vault-id: 0x7e9fc2d315a36295e809cbe8ec822c5a6e6258cc2e0f3e047d40204803f74bab
    outputs:
      - token: eusdt
        vault-id: 0x7e9fc2d315a36295e809cbe8ec822c5a6e6258cc2e0f3e047d40204803f74bab

scenarios:
  default:
    deployer: flare
    runs: 1
    bindings:
      flare-sub-parser: 0xc4b7A086FD25260461f7F50ac9D62Cb86006bbEB
      cooldown-time: 300
      per-trade-amount: 100e18

deployments:
  default:
    scenario: default
    order: buy-wflr

charts:
  Per sale:
    scenario: default
    metrics:
      - label: FTSO price
        description: FLR per $
        value: 0.1
      - label: Cooldown time
        value: 0.2
      - label: FLR per trade amount
        value: 0.3
      - label: $ per trade amount
        value: 0.4
      - label: IO ratio
        value: 0.5
---
#flare-sub-parser !The flare subparser address.

#per-trade-amount !The amount that we'll buy or sell per trade.
#cooldown-time !The minimum amount of seconds that must elapse between trades.

#ftso-base !The base token of the FTSO pair.
#ftso-quote !The quote token of the FTSO pair.

#calculate-io
using-words-from flare-sub-parser

now: block-timestamp(),

/* ensure that the cooldown time has elapsed since the last trade */
:ensure(
  greater-than-or-equal-to(
    now
    int-add(get("last-traded") cooldown-time)
  )
  "cooldown"
),
:set("last-traded" now),

/* getting a quote from the Flare FTSO */
ftso-price: decimal18-inv(ftso-current-price-usd("FLR" 3600)),

/* added for charting */
_: cooldown-time,
flr-amount: decimal18-mul(ftso-price per-trade-amount),

max-output: per-trade-amount,
io-ratio: ftso-price;

#handle-io
:;