# This is a simple stop-loss order that will sell if the price drops below our threshold

tokens:
  eusdt:
    address: 0x96B41289D90444B8adD57e6F265DB5aE8651DF29
    decimals: 6
    network: flare
  wflr:
    address: 0x1D80c49BbBCd1C0911346656B529DF9E5c2F783d
    decimals: 18
    network: flare

orders:
  stop-loss:
    inputs:
      - token: eusdt
        vault-id: 0x01
    outputs:
      - token: wflr
        vault-id: 0x02
scenarios:
  stop-loss:
    deployer: flare
    bindings:
      flare-subparser: 0x4F4267c2084607A5e23660733Cb3a0Cf5840F0C7
      cooldown-time: 300
      trade-amount: 100e18
      threshold-price: 5e17
      ftso-base: "FLR"
      ftso-quote: "ETH"

deployments:
  stop-loss:
    scenario: stop-loss
    order: stop-loss
---
#flare-sub-parser !The flare subparser address.

#trade-amount !The amount that we'll buy or sell.
#threshold-price !The price below which we'll sell.
#bounty-amount !The amount of the bounty that we'll pay to the filler of this order.

#ftso-base !The base token of the FTSO pair.
#ftso-quote !The quote token of the FTSO pair.

#calculate-io
using-words-from flare-sub-parser

ftso-price: ftso-current-price-pair(ftso-base ftso-quote 3600),

:ensure(lt(ftso-price threshold-price)),

max-output: trade-amount,
price: ftso-price;

#handle-io
:;