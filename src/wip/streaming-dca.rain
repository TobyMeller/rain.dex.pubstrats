# Strategy: Streaming DCA

networks:
  polygon-red: 
    rpc: https://rpc.ankr.com/polygon 
    chain-id: 137 
    network-id: 137 
    currency: MATIC

subgraphs:
  polygon-red: https://api.thegraph.com/subgraphs/name/h20liquidity/polygon-0xc95a5f8e
  
orderbooks:
  polygon-red:
    address: 0xc95A5f8eFe14d7a20BD2E5BAFEC4E71f8Ce0B9A6
    network: polygon-red
    subgraph: polygon-red

deployers:
  polygon-red:
    address: 0xB3aC858bEAf7814892d3946A8C109A7D701DF8E7
    network: polygon-red

tokens:
  polygon-red:
    network: polygon-red
    address: 0x222789334D44bB5b2364939477E15A6c981Ca165
  polygon-blue:
    network: polygon-red
    address: 0x6d3AbB80c3CBAe0f60ba274F36137298D8571Fbe

scenarios:
    streaming-dca:
        network: polygon-red
        deployer: polygon-red
        orderbook: polygon-red
        bindings:
          # Ask for now, registry in future.
          uniswap-words: 0x2382e861cF4F47578aC29B50944b3b445577aF74
          orderbook-subparser: 0x8f037f2a3fF2dee510486D9C63A47A245991a4C1

          # Input and Output token addresses from perspective of order
          input-token-address: 0x222789334D44bB5b2364939477E15A6c981Ca165
          output-token-address: 0x6d3AbB80c3CBAe0f60ba274F36137298D8571Fbe

          # Number of output tokens offered per second.
          per-second-rate: 0.1

          # Unix timestamp for strating of the strategy.
          strat-strat-time: 9999999999
                            
          # Bounty amount denominated in input tokens
          bounty-min: 0.02
          bounty-max: 2
          bounty-epoch-increase: 0.01
          bounty-epoch: 1800

          # Uniswap v3 pool fees for input-output token pair
          twap-io-fee: '[uniswap-v3-fee-low]'

          # Minimum input/output token ratio  
          min-ratio: 0.005      
---
#input-token-address !Order input token address.
#output-token-address !Order output token address.

#twap-io-fee !Twap fee for the distribution token pool, paired with either stable token. 
#min-ratio !Minimum input ouput ratio for the order.

#bounty-min !Minimum bounty to offer for each trade in USD.
#bounty-epoch-increase !Amount to increase bounty per bounty epoch.
#bounty-epoch !Bounty epoch in seconds.
#bounty-max !Maximum bounty that can be offered. 

#per-second-rate !The rate of stable denominated distributed tokens distributed per second.
#strat-strat-time !Strategy start timestamp

#uniswap-words !The subparser for the Uniswap words
#orderbook-subparser !The subparser for the Orderbook words
#last-time-key "last-time-key"

#bounty-auction
  time-since-cooldown: ,
  bounty: min(
    linear-growth(
      bounty-min
      bounty-epoch-increase
      div(time-since-cooldown bounty-epoch) 
    )
    bounty-max
  );

#get-last-time
 current-time: block-timestamp(),
 last-time: any(
    get(hash(order-hash() last-time-key))
    strat-strat-time
  );

#calculate-budget-input
  current-budget: ,
  _: uniswap-v3-quote-exact-input(
    output-token-address input-token-address
    current-budget twap-io-fee
  );

#calculate-io
  using-words-from uniswap-words orderbook-subparser
  
  current-time last-time: call<'get-last-time>(), 
  elapsed-time: saturating-sub(current-time last-time),
  current-budget: mul(per-second-rate elapsed-time),
  bounty-amount: call<'bounty-auction>(elapsed-time),
  input-amount: call<'calculate-budget-input>(current-budget),
  max-amount: current-budget,
  io-ratio: div(saturating-sub(input-amount bounty-amount) current-budget),
  :ensure(
    greater-than-or-equal-to(io-ratio min-ratio)
    "min ratio"
  );

#handle-io
 :;